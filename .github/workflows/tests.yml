name: Run tests

on:
  workflow_dispatch:
  push:
    branches-ignore:
      - gh-pages
  pull_request:


jobs:
  run-code-tests:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - name-suffix: "(Minimum Versions)"
            python-version: "3.8"
            cache-suffix: "-minver"
            extra-requirements: "-c requirements/minver.txt"
          - python-version: "3.8"
          - python-version: "3.9"
          - python-version: "3.10"
          - python-version: "3.11"
          - python-version: "3.12"
    name: Tests on ${{ matrix.python-version }} ${{ matrix.name-suffix }}
    steps:
      - name: Setup python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Cache pip
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: pip-cache-${{ hashFiles('requirements/*.txt') }}
          restore-keys: |
            pip-cache

      - name: Install python requirements
        run: |
          python -m pip install --upgrade pip
          python -m pip install --upgrade build twine
          python -m pip install -r requirements/dev.txt ${{ matrix.extra-requirements }}

      - name: Install Fast-F1 from sources
        run: |
          python3 -m pip install ${{ matrix.extra-requirements }} -e .

      - name: Create cache directory
        run: |
          mkdir test_cache  # make sure cache dir exists

      - name: Cache FastF1
        uses: actions/cache@v3
        with:
          path: ./test_cache
          key: fastf1-${{ matrix.python-version }}${{ matrix.cache-suffix }}-${{ hashFiles('*.*') }}
          restore-keys: |
            fastf1-${{ matrix.python-version }}${{ matrix.cache-suffix }}

      - name: Run tests
        run: |
          pytest -ra


  run-lint-checks:
    runs-on: ubuntu-latest
    name: Linting (Ruff)
    steps:
      - name: Setup python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Cache pip
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: pip-cache-${{ hashFiles('requirements/*.txt') }}
          restore-keys: |
            pip-cache

      - name: Install python requirements
        run: |
          python -m pip install --upgrade pip
          python -m pip install --upgrade build twine
          python -m pip install -r requirements/dev.txt

      - name: Install FastF1 from sources
        run: |
          python -m pip install -e .

      - name: Run tests
        run: |
          # ruff with default config
          ruff check .


  run-isort-test:
    name: Test import order (isort)
    runs-on: ubuntu-latest

    steps:
      - name: Setup python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Cache pip
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: pip-cache-${{ hashFiles('requirements/*.txt') }}
          restore-keys: |
            pip-cache

      - name: Install python requirements
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r requirements/dev.txt

      - name: Run isort (check only)
        run: |
          python -m isort . --check-only

  run-readme-render-test:
    name: Test readme renders on PyPi
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: '3.12'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install --upgrade build twine

      - name: Build release and check long form description
        run: |
          python -m build
          twine check dist/*


  run-sphinx-build-test:
    name: Test Docs
    uses: ./.github/workflows/docs.yml
    with:
      publish: false
